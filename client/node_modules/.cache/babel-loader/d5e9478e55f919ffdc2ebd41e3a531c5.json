{"ast":null,"code":"var _jsxFileName = \"/Users/jessica/Documents/projects/hermes/client/src/pages/QuizzesUpdate.jsx\";\nimport React, { Component } from 'react';\nimport api from '../api';\nimport styled from 'styled-components';\nconst Title = styled.h1.attrs({\n  className: 'h1'\n})``;\nconst Wrapper = styled.div.attrs({\n  className: 'form-group'\n})`\n    margin: 0 30px;\n`;\nconst Label = styled.label`\n    margin: 5px;\n`;\nconst InputText = styled.input.attrs({\n  className: 'form-control'\n})`\n    margin: 5px;\n`;\nconst Button = styled.button.attrs({\n  className: `btn btn-primary`\n})`\n    margin: 15px 15px 15px 5px;\n`;\nconst CancelButton = styled.a.attrs({\n  className: `btn btn-danger`\n})`\n    margin: 15px 15px 15px 5px;\n`;\n\nclass QuizUpdate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeInputName = async event => {\n      const name = event.target.value;\n      this.setState({\n        name\n      });\n    };\n\n    this.handleChangeInputAuthor = async event => {\n      const rating = event.target.validity.valid ? event.target.value : this.state.author;\n      this.setState({\n        author\n      });\n    };\n\n    this.handleUpdateMovie = async () => {\n      const {\n        id,\n        name,\n        author\n      } = this.state;\n      const payload = {\n        name,\n        author\n      };\n      await api.updateQuizById(id, payload).then(res => {\n        window.alert(`Quiz updated successfully`);\n        this.setState({\n          name: '',\n          author: ''\n        });\n      });\n    };\n\n    this.componentDidMount = async () => {\n      const {\n        id\n      } = this.state;\n      const quiz = await api.getQuizById(id);\n      this.setState({\n        name: quiz.data.data.name,\n        author: quiz.data.data.author\n      });\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      author: ''\n    };\n  }\n\n  render() {\n    const {\n      name,\n      author\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Update Movie\"), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Name: \"), /*#__PURE__*/React.createElement(InputText, {\n      type: \"text\",\n      value: name,\n      onChange: this.handleChangeInputName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Author: \"), /*#__PURE__*/React.createElement(InputText, {\n      type: \"text\",\n      value: author,\n      onChange: this.handleChangeInputAuthor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleUpdateMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Update Movie\"), /*#__PURE__*/React.createElement(CancelButton, {\n      href: '/quizzes/list',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Cancel\"));\n  }\n\n}\n\nexport default QuizUpdate;","map":{"version":3,"sources":["/Users/jessica/Documents/projects/hermes/client/src/pages/QuizzesUpdate.jsx"],"names":["React","Component","api","styled","Title","h1","attrs","className","Wrapper","div","Label","label","InputText","input","Button","button","CancelButton","a","QuizUpdate","constructor","props","handleChangeInputName","event","name","target","value","setState","handleChangeInputAuthor","rating","validity","valid","state","author","handleUpdateMovie","id","payload","updateQuizById","then","res","window","alert","componentDidMount","quiz","getQuizById","data","match","params","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../api'\n\nimport styled from 'styled-components'\n\nconst Title = styled.h1.attrs({\n    className: 'h1',\n})``\n\nconst Wrapper = styled.div.attrs({\n    className: 'form-group',\n})`\n    margin: 0 30px;\n`\n\nconst Label = styled.label`\n    margin: 5px;\n`\n\nconst InputText = styled.input.attrs({\n    className: 'form-control',\n})`\n    margin: 5px;\n`\n\nconst Button = styled.button.attrs({\n    className: `btn btn-primary`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nconst CancelButton = styled.a.attrs({\n    className: `btn btn-danger`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nclass QuizUpdate extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            author: '',\n        }\n    }\n\n    handleChangeInputName = async event => {\n        const name = event.target.value\n        this.setState({ name })\n    }\n\n    handleChangeInputAuthor = async event => {\n        const rating = event.target.validity.valid\n            ? event.target.value\n            : this.state.author\n\n        this.setState({ author })\n    }\n\n    handleUpdateMovie = async () => {\n        const { id, name, author } = this.state\n        const payload = { name, author }\n\n        await api.updateQuizById(id, payload).then(res => {\n            window.alert(`Quiz updated successfully`)\n            this.setState({\n                name: '',\n                author: '',\n            })\n        })\n    }\n\n    componentDidMount = async () => {\n        const { id } = this.state\n        const quiz = await api.getQuizById(id)\n\n        this.setState({\n            name: quiz.data.data.name,\n            author: quiz.data.data.author,\n        })\n    }\n\n    render() {\n        const { name, author } = this.state\n        console.log(this.state)\n        return (\n            <Wrapper>\n                <Title>Update Movie</Title>\n\n                <Label>Name: </Label>\n                <InputText\n                    type=\"text\"\n                    value={name}\n                    onChange={this.handleChangeInputName}\n                />\n\n                <Label>Author: </Label>\n                <InputText\n                    type=\"text\"\n                    value={author}\n                    onChange={this.handleChangeInputAuthor}\n                />\n\n                <Button onClick={this.handleUpdateMovie}>Update Movie</Button>\n                <CancelButton href={'/quizzes/list'}>Cancel</CancelButton>\n            </Wrapper>\n        )\n    }\n}\n\nexport default QuizUpdate"]},"metadata":{},"sourceType":"module"}